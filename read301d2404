# React: Forms 

![img](https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ4wc_rEcdG1f9mYYJDWz9NAuW20_51Mpt-9Q&usqp=CAU)
HTML form elements work a bit differently from other DOM elements in React, because form elements naturally keep some internal state. For example, this form in plain HTML accepts a single name

This form has the default HTML form behavior of browsing to
 a new page when the user submits the form. If you want this 
 behavior in React, it just works. But in most cases, it’s 
 convenient to have a JavaScript function that handles the 
 submission of the form and has access to the data that the
  user entered into the form. The standard way to 
achieve this is with a technique called “controlled components.
## Controlled Components
 In HTML, form elements such as <input>, <textarea>, and <select>
  typically maintain their own state and update it based on user input
  . In React, mutable state is typically kept in the state property of
   components, and only updated with setState().

We can combine the two by making the React state be the “single 
source of truth”. Then the React component that renders a form also 
controls what happens in that form on subsequent user input. An input 
form element whose value is controlled by React in this way is called a 
“controlled component”.
## The textarea Tag :

Web apps often need forms for user interactivity, and this requires us as developers to use form controls such as text input boxes, dropdowns, checkboxes, and so on.

One frequently used form control is textarea, which is used to get multi-line input from a user. It's different from a normal text input, which allows only single-line input. A good example of a use case for textarea is an address field.

In this guide, you'll learn various ways to use textarea. 

## The select Tag :

In HTML, creates a drop-down list.React, instead of using this selected attribute,
 uses a value attribute on the root select tag. This is more convenient 
 in a controlled component because you only need to update it in one place.this 
 makes it so that , <textarea>, and all work very similarly - they all accept a 
 value attribute that you can use to implement a controlled component. The file input
  Tag : n HTML, an lets the user choose one or more files from their device storage to be 
  uploaded to a server or manipulated by JavaScript via the File API.in React its value is
   read-only, it is an uncontrolled component.
   ## Handling Multiple Inputs :
 
 When creating a form with React components, it is common to use an onChange handler
  to listen for changes to input elements and record their values in state. Besides handling 
  just one input, a single onChange handler can be set up to handle
  many different inputs in the form.

  ## Controlled Input Null Value :
 
 Specifying the value prop on a controlled component 
 prevents the user from changing the input unless you 
 desire so. If you've specified a value but the input is 
 still editable, you may have 
 accidentally set value to undefined or null
 

## Fully-Fledged Solutions :
 
 If you’re looking for a complete solution including validation, 
 keeping track of the visited fields, and handling form submission, 
 Formik is one of the popular choices. However, it is built on 
 the same principles of controlled components and managing state 